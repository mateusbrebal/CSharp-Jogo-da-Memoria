<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAAFkAAABZAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAQTs7Uj87O3kAAAAAAAAAAAAAAAAAAAAAPzs7eT85PFEAAAAAAAAAAAAA
        AAAAAAAAAAAAAEqKABhKjgKOSYwDVEE5PGI/OjyJQIAABEmMAnpKjQJ5VaoAAz86PIk+NEVnHgC0dx8A
        szIfALVTAAAAAAAAAABKjAKVSY0CkkmNAuVCRjFtPzo8iUiMA1JJjgG9SY4BvUiOA1E/OjyJQDk+YyAA
        tbIfALX6HgC3PAAAAAAAAAAASY0DYkmNAuFJjQLSQj86ZT86PIlJjAAqSY0C5EmNAuRLjwApPzo8iT0z
        RWgfALXgHwC1tx8Atn0AAAAAQDo9VEE6PGZBTDB1QT83aj87PKFAOjy4QTo8ZkJHMnBCRzJwQTo8ZkA6
        PLg/OzyhPDNOb0A5Pmc/M0puQDo9VD87O3lAOjyIQDo8iEA6PIhAOTy2QDk8yEA6PIhAOjyIQDo8iEA6
        PIhAOTzIQDk8tkA6PIhAOjyIQDo8iEA5PHgAAAAAM5kABUmMA1RKjQAmQTk8Yj86PIkjALkWHwC0KR8A
        tCkjALkWPzo8iUE5PGJIkAAnSo0DUzOZAAUAAAAAAAAAAEmNAoJJjQG6SY0C5EJCNWk/OjyJHgC2Kh8A
        teAfALXgHgC2Kj86PIlCQjVpSY0C5EmNAbpJjAKBAAAAAAAAAABIjAKDSY0BuUmNAuRCQjVpPzo8iR4A
        tiofALXgHwC14B8AtCk/OjyJQkQ1aUmNAuRJjQG6SY0CggAAAAAAAAAAM5kABUmMA1RIkAAnQTk8Yj86
        PIkhALEXHgC2Kh4AtiohALEXPzo8iUE5PGJIkAAnSYwDVDOZAAUAAAAAQDk8eEA6PIhAOjyIQDo8iEA5
        PLZAOTzIQDo8iEA6PIhAOjyIQDo8iEA5PMhAOTy2QDo8iEA6PIhAOjyIQDk8eD85PFU9M0ttQDk+Zz8z
        TW4/OzyhQDo8uEE6PGZBRjJxQUYycUE6PGZAOjy4Pzs8oT8zTW5AOT5nPTNLbUA6PVQAAAAAHwC2fR8A
        tbcfALXgPTNFaD86PIlHjgArSY0C5EmNAuRJjAAqPzo8iT0zR2gfALXgHwC1tx8Atn0AAAAAAAAAAB4A
        tzwfALX6IAC1skA5PmM/OjyJSI4DUUiNAb5JjgG/SI4DUT86PIlAOT5jIAC1sh8AtfoeALc8AAAAAAAA
        AAAfALVTHwCzMh4AtHc+NEVnPzo8iVWqAANIjAJ4SY0Cd1WqAAM/OjyJPjRFZx4AtHcfALMyHwC0UgAA
        AAAAAAAAAAAAAAAAAAAAAAAAQTs7Uj87O3kAAAAAAAAAAAAAAAAAAAAAQTs9ekE7O1IAAAAAAAAAAAAA
        AAAAAAAA888AAIABAACAAQAAgAEAAAAAAAAAAAAAgAEAAIABAACAAQAAgAEAAAAAAAAAAAAAgAEAAIAB
        AACAAQAA888AAA==
</value>
  </data>
</root>